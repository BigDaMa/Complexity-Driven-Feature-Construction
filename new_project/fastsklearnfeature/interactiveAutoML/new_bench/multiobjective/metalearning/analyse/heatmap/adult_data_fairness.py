import numpy as np
import seaborn as sns; sns.set()
import matplotlib.pyplot as plt
import pandas as pd

from fastsklearnfeature.interactiveAutoML.new_bench.multiobjective.metalearning.analyse.heatmap.heatmap_util import pivot2latex


import matplotlib as mpl


mappnames = {1:'var',
			 2: 'chi2',
			 3:'FCBF',
			 4: 'Fisher score',
			 5: 'mutual_info_classif',
			 6: 'MCFS',
			 7: 'ReliefF',
			 8: 'TPE',
             9: 'simulated_annealing',
			 10: 'NSGA-II',
			 11: 'exhaustive',
			 12: 'forward_selection',
			 13: 'backward_selection',
			 14: 'forward_floating_selection',
			 15: 'backward_floating_selection',
			 16: 'recursive_feature_elimination'
			 }


#data = {(0.7, 0.84): (3.699727773666382, 1), (0.7, 0.856): (8.524975538253784, 1), (0.7, 0.872): (16.752033233642578, 1), (0.7, 0.888): (23.917881965637207, 1), (0.7, 0.904): (22.85557246208191, 1), (0.7, 0.92): (25.34498119354248, 1), (0.7, 0.936): (24.581772327423096, 1), (0.7, 0.9520000000000001): (26.871407985687256, 1), (0.7, 0.9680000000000001): (4.609627962112427, 1), (0.7, 0.9840000000000001): (21.044512033462524, 1), (0.721, 0.84): (1.039475917816162, 1), (0.721, 0.856): (13.23961615562439, 1), (0.721, 0.872): (31.775431156158447, 1), (0.721, 0.888): (1.279573917388916, 1), (0.721, 0.904): (25.280256509780884, 1), (0.721, 0.92): (26.176687002182007, 1), (0.721, 0.936): (9.483660697937012, 1), (0.721, 0.9520000000000001): (21.11408805847168, 1), (0.721, 0.9680000000000001): (26.47396445274353, 1), (0.721, 0.9840000000000001): (28.83041763305664, 1), (0.742, 0.84): (3.4393579959869385, 1), (0.742, 0.856): (1.2678182125091553, 1), (0.742, 0.872): (1.2591476440429688, 1), (0.742, 0.888): (20.99975824356079, 1), (0.742, 0.904): (14.061608791351318, 1), (0.742, 0.92): (3.6333553791046143, 1), (0.742, 0.936): (21.81061315536499, 1), (0.742, 0.9520000000000001): (22.78275775909424, 1), (0.742, 0.9680000000000001): (25.062793493270874, 1), (0.742, 0.9840000000000001): (12.486136674880981, 1), (0.763, 0.84): (1.380284070968628, 1), (0.763, 0.856): (1.0618224143981934, 1), (0.763, 0.872): (1.3899483680725098, 1), (0.763, 0.888): (19.329015970230103, 1), (0.763, 0.904): (24.005310773849487, 1), (0.763, 0.92): (10.344524145126343, 1), (0.763, 0.936): (21.561043977737427, 1), (0.763, 0.9520000000000001): (28.21840190887451, 1), (0.763, 0.9680000000000001): (25.914105892181396, 1), (0.763, 0.9840000000000001): (21.81332278251648, 1), (0.784, 0.84): (1.3217742443084717, 1), (0.784, 0.856): (50.53926420211792, 1), (0.784, 0.872): (18.54476284980774, 1), (0.784, 0.888): (7.64946985244751, 1), (0.784, 0.904): (30.200249910354614, 1), (0.784, 0.92): (25.903877019882202, 1), (0.784, 0.936): (3.6069653034210205, 1), (0.784, 0.9520000000000001): (34.27632522583008, 1), (0.784, 0.9680000000000001): (24.966881036758423, 1), (0.784, 0.9840000000000001): (27.67940878868103, 1), (0.805, 0.84): (13.345391273498535, 1), (0.805, 0.856): (55.03014278411865, 1), (0.805, 0.872): (17.906885147094727, 1), (0.805, 0.888): (26.82119083404541, 1), (0.805, 0.904): (25.097790718078613, 1), (0.805, 0.92): (27.097022771835327, 1), (0.805, 0.936): (7.030475616455078, 1), (0.805, 0.9520000000000001): (13.666390419006348, 1), (0.805, 0.9680000000000001): (16.470927953720093, 1), (0.805, 0.9840000000000001): (30.55471682548523, 1), (0.8260000000000001, 0.84): (7.25888466835022, 1), (0.8260000000000001, 0.856): (8.416648149490356, 2), (0.8260000000000001, 0.872): (21.659736394882202, 2), (0.8260000000000001, 0.888): (33.08274579048157, 3), (0.8260000000000001, 0.904): (14.370322465896606, 6), (0.8260000000000001, 0.92): (18.995838165283203, 6)}

data = {(0.7, 0.84): (12.876352071762085, 1), (0.7, 0.856): (12.472964763641357, 1), (0.7, 0.872): (24.92965793609619, 1), (0.7, 0.888): (60.93153488636017, 1), (0.7, 0.904): (38.262816429138184, 9), (0.7, 0.92): (242.75251257419586, 1), (0.7, 0.936): (226.32366812229156, 1), (0.7, 0.9520000000000001): (255.54407703876495, 1), (0.7, 0.9680000000000001): (34.91584300994873, 1), (0.7, 0.9840000000000001): (309.10352396965027, 1), (0.721, 0.84): (12.372789859771729, 1), (0.721, 0.856): (13.505053758621216, 1), (0.721, 0.872): (11.30012035369873, 1), (0.721, 0.888): (79.97687840461731, 1), (0.721, 0.904): (34.21598994731903, 1), (0.721, 0.92): (551.0212736129761, 11), (0.721, 0.936): (107.54151475429535, 1), (0.721, 0.9520000000000001): (319.98073399066925, 1), (0.721, 0.9680000000000001): (350.1863948106766, 1), (0.721, 0.9840000000000001): (204.26536452770233, 1), (0.742, 0.84): (13.26906669139862, 1), (0.742, 0.856): (14.172284960746765, 1), (0.742, 0.872): (17.28593146800995, 1), (0.742, 0.888): (327.39723348617554, 1), (0.742, 0.904): (35.28169250488281, 1), (0.742, 0.92): (316.53745555877686, 1), (0.742, 0.936): (323.6325377225876, 5), (0.742, 0.9520000000000001): (288.9237526655197, 1), (0.742, 0.9680000000000001): (62.69143342971802, 1), (0.742, 0.9840000000000001): (333.8764101266861, 1), (0.763, 0.84): (10.95219600200653, 1), (0.763, 0.856): (11.55062472820282, 1), (0.763, 0.872): (105.10319828987122, 1), (0.763, 0.888): (205.81894552707672, 1), (0.763, 0.904): (174.81944358348846, 1), (0.763, 0.92): (263.77585232257843, 1), (0.763, 0.936): (329.7882055044174, 1), (0.763, 0.9520000000000001): (278.6713321208954, 1), (0.763, 0.9680000000000001): (256.07324719429016, 1), (0.763, 0.9840000000000001): (274.41637122631073, 1), (0.784, 0.84): (13.440136909484863, 1), (0.784, 0.856): (15.803197741508484, 1), (0.784, 0.872): (19.361482739448547, 1), (0.784, 0.888): (221.89749491214752, 1), (0.784, 0.904): (247.62403917312622, 1), (0.784, 0.92): (229.50105714797974, 2), (0.784, 0.936): (246.34729945659637, 3), (0.784, 0.9520000000000001): (390.76052236557007, 5), (0.805, 0.84): (13.679907441139221, 1), (0.805, 0.856): (16.86485457420349, 1), (0.805, 0.872): (17.708351492881775, 1), (0.805, 0.888): (42.4865882396698, 1), (0.805, 0.904): (114.71178328990936, 1), (0.805, 0.92): (55.667227268218994, 3), (0.805, 0.936): (426.2659567594528, 3), (0.805, 0.9520000000000001): (569.949716925621, 8), (0.8260000000000001, 0.84): (16.199352502822876, 1), (0.8260000000000001, 0.856): (16.62684738636017, 1), (0.8260000000000001, 0.872): (56.10554337501526, 1), (0.8260000000000001, 0.888): (462.8155860900879, 1), (0.8260000000000001, 0.904): (229.0939929485321, 2), (0.8260000000000001, 0.92): (521.1705120801926, 5), (0.8260000000000001, 0.936): (392.7133992910385, 9), (0.8470000000000001, 0.84): (16.674651622772217, 1), (0.8470000000000001, 0.856): (21.98374569416046, 1), (0.8470000000000001, 0.872): (57.84580075740814, 1), (0.8470000000000001, 0.888): (72.91048836708069, 8), (0.8470000000000001, 0.904): (146.1639015674591, 8), (0.8470000000000001, 0.92): (483.9963046312332, 9), (0.8680000000000001, 0.84): (16.73296344280243, 1), (0.8680000000000001, 0.856): (17.860432386398315, 1), (0.8680000000000001, 0.872): (237.50833177566528, 1), (0.8680000000000001, 0.888): (98.00628244876862, 8), (0.8890000000000001, 0.84): (14.190668225288391, 1), (0.8890000000000001, 0.856): (18.384907841682434, 1), (0.8890000000000001, 0.872): (440.3329521417618, 8)}
#data = {(0.7, 0.84): (4.660682201385498, 1), (0.7, 0.856): (6.034410119056702, 1), (0.7, 0.872): (3.132817268371582, 1), (0.7, 0.888): (19.230981469154358, 1), (0.7, 0.904): (15.60329020023346, 1), (0.7, 0.92): (16.83293104171753, 1), (0.7, 0.936): (15.697733283042908, 1), (0.7, 0.9520000000000001): (26.090758562088013, 1), (0.7, 0.9680000000000001): (23.425156235694885, 1), (0.7, 0.9840000000000001): (12.070036888122559, 1), (0.721, 0.84): (5.274179458618164, 1), (0.721, 0.856): (6.059129595756531, 1), (0.721, 0.872): (22.406949400901794, 1), (0.721, 0.888): (21.167606949806213, 1), (0.721, 0.904): (10.480020403862, 1), (0.721, 0.92): (21.185038089752197, 1), (0.721, 0.936): (3.4412682056427, 1), (0.721, 0.9520000000000001): (17.592991709709167, 1), (0.721, 0.9680000000000001): (20.376141667366028, 1), (0.721, 0.9840000000000001): (29.372273325920105, 1), (0.742, 0.84): (2.952144503593445, 1), (0.742, 0.856): (4.605335354804993, 1), (0.742, 0.872): (15.117745041847229, 1), (0.742, 0.888): (14.520962119102478, 1), (0.742, 0.904): (17.822891116142273, 1), (0.742, 0.92): (13.726123929023743, 1), (0.742, 0.936): (16.815372824668884, 1), (0.742, 0.9520000000000001): (19.225167989730835, 1), (0.742, 0.9680000000000001): (26.561028003692627, 1), (0.742, 0.9840000000000001): (20.33914041519165, 1), (0.763, 0.84): (3.8634577989578247, 1), (0.763, 0.856): (9.66806173324585, 1), (0.763, 0.872): (18.698488473892212, 1), (0.763, 0.888): (16.367440938949585, 1), (0.763, 0.904): (20.032198190689087, 1), (0.763, 0.92): (10.999310970306396, 1), (0.763, 0.936): (16.317129850387573, 1), (0.763, 0.9520000000000001): (22.767165184020996, 1), (0.763, 0.9680000000000001): (30.215134859085083, 1), (0.763, 0.9840000000000001): (28.737646460533142, 1), (0.784, 0.84): (6.950955271720886, 1), (0.784, 0.856): (13.777881622314453, 1), (0.784, 0.872): (18.219486832618713, 1), (0.784, 0.888): (25.505741119384766, 1), (0.784, 0.904): (25.13401961326599, 1), (0.784, 0.92): (16.690545201301575, 1), (0.784, 0.936): (26.689873933792114, 1), (0.784, 0.9520000000000001): (24.66729474067688, 1), (0.784, 0.9680000000000001): (15.516701698303223, 1), (0.784, 0.9840000000000001): (23.962781071662903, 1), (0.805, 0.84): (2.1253048181533813, 1)}

data ={(0.7, 0.84): (289.38583648204803, 8), (0.7, 0.856): (426.6982876062393, 10), (0.721, 0.84): (78.40652966499329, 9), (0.721, 0.856): (140.1847414970398, 9), (0.742, 0.856): (306.2184420824051, 9), (0.763, 0.856): (305.77112221717834, 9), (0.784, 0.856): (403.93737518787384, 10)}

accuracies = []
fairness = []
strategy= []
searchtime = []

map_real_id_to_unique = {}
map_unique_to_name = {}




for k,v in data.items():
	accuracies.append(round(k[0], 2))
	fairness.append(round(k[1], 2))
	searchtime.append(round(v[0], 2))
	strategy.append(v[1])

print(map_unique_to_name)

df = pd.DataFrame({'Minimum Accuracy': accuracies, 'Minimum Fairness': fairness, 'Search time': searchtime, 'Fastest Strategy': strategy})


#ax = sns.heatmap(df.pivot("Minimum Accuracy", "Minimum Fairness", "Search time"))
#plt.show()

print(len(np.unique(strategy)))
print(np.unique(strategy))

#current_palette = sns.color_palette(palette='dark', n_colors=len(np.unique(strategy)))
current_palette = sns.color_palette(palette='colorblind', n_colors=len(np.unique(strategy)))
#current_palette = sns.palplot(sns.color_palette("hls",7))

#https://colorbrewer2.org/#type=qualitative&scheme=Set1&n=7
flatui =['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628']
#flatui=['#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628','#f781bf']
current_palette = sns.color_palette(flatui)



fig, ax = plt.subplots(figsize=(3.5, 3.5))
my_pivot = df.pivot("Minimum Accuracy", "Minimum Fairness", 'Fastest Strategy')
my_pivot.sort_index(level=0, ascending=False, inplace=True)
print(my_pivot)
sns.heatmap(my_pivot, cbar=False, cmap=current_palette, ax=ax)


pivot2latex(my_pivot)